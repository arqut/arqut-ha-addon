name: Build and Push Add-on

on:
  workflow_dispatch:
  push:
    tags: 
     - 'v*' # Trigger on tags like v0.1.0
    paths:
      - 'arqut-edge/**'
      - '.github/workflows/build.yaml'

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - arch: i386
            build_from: ghcr.io/home-assistant/i386-base-debian:bullseye
          - arch: amd64
            build_from: ghcr.io/home-assistant/amd64-base-debian:bullseye
          - arch: armv6
            build_from: ghcr.io/home-assistant/armv7-base-debian:bullseye
          - arch: armv7
            build_from: ghcr.io/home-assistant/armv7-base-debian:bullseye
          - arch: aarch64
            build_from: ghcr.io/home-assistant/aarch64-base-debian:bullseye

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from git tag
        if: startsWith(github.ref, 'refs/tags/v')
        id: extract_version
        shell: bash
        env:
          GITHUB_REF: ${{ github.ref }}
        run: |
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: ./arqut-edge
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/arqut-edge-${{ matrix.arch }}:${{ steps.extract_version.outputs.version || env.VERSION }}
            ghcr.io/${{ github.repository_owner }}/arqut-edge-${{ matrix.arch }}:latest
          build-args: |
            BUILD_FROM=${{ matrix.build_from }}
            BINARY_PATH=./build/${{ matrix.arch }}/arqut-edge
